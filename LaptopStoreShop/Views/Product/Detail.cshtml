@{
    ViewData["Title"] = "Product Detail";
}
@model LaptopStoreShop.Models.Laptop

@if (TempData["Success"] != null)
{
	<div class="alert alert-success alert-dismissible fade show" role="alert">
		@TempData["Success"]
		<button type="button" class="btn-close" data-bs-dismiss="alert"></button>
	</div>
}

@if (TempData["Message"] != null)
{
	<div class="alert alert-danger alert-dismissible fade show" role="alert">
		@TempData["Message"]
		<button type="button" class="btn-close" data-bs-dismiss="alert"></button>
	</div>
}

<div class="section">
	<div class="container">
		<div class="row">
			<div class="col-md-5 col-md-push-2">
				<div id="product-main-img">
					@foreach (var img in Model.LaptopImages)
					{
						<div class="product-preview">
							<img src="@img.ImageUrl" alt="@Model.Name">
						</div>
					}
				</div>
			</div>
			<div class="col-md-2  col-md-pull-5">
				<div id="product-imgs">
					@foreach (var img in Model.LaptopImages)
					{
						<div class="product-preview">
							<img src="@img.ImageUrl" alt="@Model.Name">
						</div>
					}
					
				</div>
			</div>
			<div class="col-md-5">
				<div class="product-details">
					<h2 class="product-name">@Model.Name</h2>
					<div>
						<div class="product-rating">
							<i class="fa fa-star"></i>
							<i class="fa fa-star"></i>
							<i class="fa fa-star"></i>
							<i class="fa fa-star"></i>
							<i class="fa fa-star-o"></i>
						</div>
					</div>
					<div>
						<h3 class="product-price">@Model.Price.ToString("N0") VNĐ</h3>
						<span class="product-available">Trong kho:</span> @Model.Stock chiếc
					</div>
					<div class="add-to-cart d-flex">
						<form id="addToCartForm" asp-controller="Payment" asp-action="AddToCart" method="post">
							<div class="qty-label">
								Số lượng
								<div class="input-number">
									<input name="qty" type="number" value="1" min="1">
									<span class="qty-up">+</span>
									<span class="qty-down">-</span>
								</div>
							</div>
							<input type="hidden" name="id" value="@Model.Id">
							<input type="hidden" name="name" value="@Model.Name">
							<input type="hidden" name="price" value="@Model.Price.ToString("N0")">
							<input type="hidden" name="stock" value="@Model.Stock">
							<input type="hidden" name="imageUrl" value="@Model.LaptopImages.FirstOrDefault()?.ImageUrl">

							<button type="submit" class="add-to-cart-btn">
								<i class="fa fa-shopping-cart"></i> Thêm giỏ hàng
							</button>
						</form>
					</div>
					<ul class="product-links">
						<li>Loại:</li>
						<li><a href="#">@Model.Category.CategoryName</a></li>
						<li>Hãng:</li>
						<li><a href="#">@Model.Brand.BrandName</a></li>
					</ul>

					<ul class="product-links">
						<li>Share:</li>
						<li><a href="#"><i class="fa fa-facebook"></i></a></li>
						<li><a href="#"><i class="fa fa-twitter"></i></a></li>
						<li><a href="#"><i class="fa fa-google-plus"></i></a></li>
						<li><a href="#"><i class="fa fa-envelope"></i></a></li>
					</ul>

				</div>
			</div>
			<!-- /Product details -->
			<!-- Product tab -->
			<div class="col-md-12">
				<div id="product-tab">
					<!-- product tab nav -->
					<ul class="tab-nav">
						<li class="active"><a data-toggle="tab" href="#tab1">Thông số chi tiết</a></li>
						
					</ul>
					<!-- /product tab nav -->
					<!-- product tab content -->
					<div class="tab-content">
						<div id="tab1" class="tab-pane fade in active">
							<div class="row">
								<div class="col-md-12">
									<p>@Html.Raw(@Model.Description)</p>
								</div>
							</div>
						</div>
					</div>
					<!-- /product tab content  -->
				</div>
			</div>
			<!-- /product tab -->
		</div>
		<!-- /row -->
	</div>
	<!-- /container -->
</div>
<!-- /SECTION -->
<script>
		// Lấy các phần tử DOM
	const quantityInput = document.getElementById('quantityInput');
	const qtyHidden = document.getElementById('qtyHidden');
	const qtyUp = document.querySelector('.qty-up');
	const qtyDown = document.querySelector('.qty-down');
	const form = document.getElementById('addToCartForm');

	// Lấy max từ thuộc tính max và chuyển thành số
	const maxStock = parseInt(quantityInput.getAttribute('max')) || 1; // Nếu lỗi, mặc định là 1
	const minStock = parseInt(quantityInput.getAttribute('min')) || 1;

	// Cập nhật giá trị qtyHidden khi thay đổi input
	quantityInput.addEventListener('input', function() {
		let value = parseInt(this.value) || minStock; // Nếu không hợp lệ, dùng min
		if (value < minStock) value = minStock;
		if (value > maxStock) value = maxStock;
		this.value = value;
		qtyHidden.value = value;
	});

	// Tăng số lượng khi nhấn nút "+"
	qtyUp.addEventListener('click', function() {
		let value = parseInt(quantityInput.value) + 1;
		if (value <= maxStock) {
			quantityInput.value = value;
			qtyHidden.value = value;
		}
	});

	// Giảm số lượng khi nhấn nút "-"
	qtyDown.addEventListener('click', function() {
		let value = parseInt(quantityInput.value) - 1;
		if (value >= minStock) {
			quantityInput.value = value;
			qtyHidden.value = value;
		}
	});

	// Đảm bảo qtyHidden được cập nhật trước khi gửi form
	form.addEventListener('submit', function(e) {
		qtyHidden.value = quantityInput.value; // Đồng bộ giá trị trước khi gửi
	});
</script>